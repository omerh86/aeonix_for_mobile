using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Org.Linphone.Tools {

	// Metadata.xml XPath class reference: path="/api/package[@name='org.linphone.tools']/class[@name='H264Helper']"
	[global::Android.Runtime.Register ("org/linphone/tools/H264Helper", DoNotGenerateAcw=true)]
	public partial class H264Helper : global::Java.Lang.Object {



		// Metadata.xml XPath field reference: path="/api/package[@name='org.linphone.tools']/class[@name='H264Helper']/field[@name='MODE_AUTO']"
		[Register ("MODE_AUTO")]
		public static string ModeAuto {
			get {
				const string __id = "MODE_AUTO.Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "MODE_AUTO.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.linphone.tools']/class[@name='H264Helper']/field[@name='MODE_MEDIA_CODEC']"
		[Register ("MODE_MEDIA_CODEC")]
		public static string ModeMediaCodec {
			get {
				const string __id = "MODE_MEDIA_CODEC.Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "MODE_MEDIA_CODEC.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.linphone.tools']/class[@name='H264Helper']/field[@name='MODE_OPENH264']"
		[Register ("MODE_OPENH264")]
		public static string ModeOpenh264 {
			get {
				const string __id = "MODE_OPENH264.Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "MODE_OPENH264.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}
		internal    new     static  readonly    JniPeerMembers  _members    = new XAPeerMembers ("org/linphone/tools/H264Helper", typeof (H264Helper));
		internal static new IntPtr class_ref {
			get {
				return _members.JniPeerType.PeerReference.Handle;
			}
		}

		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected H264Helper (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer) {}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='org.linphone.tools']/class[@name='H264Helper']/constructor[@name='H264Helper' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe H264Helper ()
			: base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

	}
}
