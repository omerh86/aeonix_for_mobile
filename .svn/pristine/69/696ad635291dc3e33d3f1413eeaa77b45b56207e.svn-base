using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Org.Linphone.Mediastream.Video.Capture.Hwconf {

	// Metadata.xml XPath class reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']"
	[global::Android.Runtime.Register ("org/linphone/mediastream/video/capture/hwconf/Hacks", DoNotGenerateAcw=true)]
	public sealed partial class Hacks : global::Java.Lang.Object {

		// Metadata.xml XPath class reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks.BuiltInEchoCancellerModel']"
		[global::Android.Runtime.Register ("org/linphone/mediastream/video/capture/hwconf/Hacks$BuiltInEchoCancellerModel", DoNotGenerateAcw=true)]
		public partial class BuiltInEchoCancellerModel : global::Java.Lang.Object {



			// Metadata.xml XPath field reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks.BuiltInEchoCancellerModel']/field[@name='manufacturer']"
			[Register ("manufacturer")]
			public string Manufacturer {
				get {
					const string __id = "manufacturer.Ljava/lang/String;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "manufacturer.Ljava/lang/String;";

					IntPtr native_value = JNIEnv.NewString (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks.BuiltInEchoCancellerModel']/field[@name='model']"
			[Register ("model")]
			public string Model {
				get {
					const string __id = "model.Ljava/lang/String;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "model.Ljava/lang/String;";

					IntPtr native_value = JNIEnv.NewString (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}
			internal    new     static  readonly    JniPeerMembers  _members    = new XAPeerMembers ("org/linphone/mediastream/video/capture/hwconf/Hacks$BuiltInEchoCancellerModel", typeof (BuiltInEchoCancellerModel));
			internal static new IntPtr class_ref {
				get {
					return _members.JniPeerType.PeerReference.Handle;
				}
			}

			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected BuiltInEchoCancellerModel (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer) {}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks.BuiltInEchoCancellerModel']/constructor[@name='Hacks.BuiltInEchoCancellerModel' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe BuiltInEchoCancellerModel (string p0, string p1)
				: base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_p0 = JNIEnv.NewString (p0);
				IntPtr native_p1 = JNIEnv.NewString (p1);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_p0);
					__args [1] = new JniArgumentValue (native_p1);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
					JNIEnv.DeleteLocalRef (native_p1);
				}
			}

		}

		internal    new     static  readonly    JniPeerMembers  _members    = new XAPeerMembers ("org/linphone/mediastream/video/capture/hwconf/Hacks", typeof (Hacks));
		internal static new IntPtr class_ref {
			get {
				return _members.JniPeerType.PeerReference.Handle;
			}
		}

		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal Hacks (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer) {}

		public static unsafe bool HasBuiltInEchoCanceller {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='hasBuiltInEchoCanceller' and count(parameter)=0]"
			[Register ("hasBuiltInEchoCanceller", "()Z", "GetHasBuiltInEchoCancellerHandler")]
			get {
				const string __id = "hasBuiltInEchoCanceller.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool HasCamera {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='hasCamera' and count(parameter)=0]"
			[Register ("hasCamera", "()Z", "GetHasCameraHandler")]
			get {
				const string __id = "hasCamera.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool HasTwoCamerasRear0Front1 {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='hasTwoCamerasRear0Front1' and count(parameter)=0]"
			[Register ("hasTwoCamerasRear0Front1", "()Z", "GetHasTwoCamerasRear0Front1Handler")]
			get {
				const string __id = "hasTwoCamerasRear0Front1.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsGalaxySOrTab {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='isGalaxySOrTab' and count(parameter)=0]"
			[Register ("isGalaxySOrTab", "()Z", "GetIsGalaxySOrTabHandler")]
			get {
				const string __id = "isGalaxySOrTab.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsGalaxySOrTabWithFrontCamera {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='isGalaxySOrTabWithFrontCamera' and count(parameter)=0]"
			[Register ("isGalaxySOrTabWithFrontCamera", "()Z", "GetIsGalaxySOrTabWithFrontCameraHandler")]
			get {
				const string __id = "isGalaxySOrTabWithFrontCamera.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsGalaxyTab {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='isGalaxyTab' and count(parameter)=0]"
			[Register ("isGalaxyTab", "()Z", "GetIsGalaxyTabHandler")]
			get {
				const string __id = "isGalaxyTab.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='needGalaxySAudioHack' and count(parameter)=0]"
		[Register ("needGalaxySAudioHack", "()Z", "")]
		public static unsafe bool NeedGalaxySAudioHack ()
		{
			const string __id = "needGalaxySAudioHack.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='needPausingCallForSpeakers' and count(parameter)=0]"
		[Register ("needPausingCallForSpeakers", "()Z", "")]
		public static unsafe bool NeedPausingCallForSpeakers ()
		{
			const string __id = "needPausingCallForSpeakers.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='needSoftvolume' and count(parameter)=0]"
		[Register ("needSoftvolume", "()Z", "")]
		public static unsafe bool NeedSoftvolume ()
		{
			const string __id = "needSoftvolume.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.linphone.mediastream.video.capture.hwconf']/class[@name='Hacks']/method[@name='sleep' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("sleep", "(I)V", "")]
		public static unsafe void Sleep (int p0)
		{
			const string __id = "sleep.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

	}
}
