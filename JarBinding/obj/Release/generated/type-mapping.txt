com/baidu/android/pushservice/BasicPushNotificationBuilder = Com.Baidu.Android.Pushservice.BasicPushNotificationBuilder
  <init>()V = .ctor()
  construct(Landroid/content/Context;)Landroid/app/Notification; = Construct(Android.Content.Context)
com/baidu/android/pushservice/CommandService = Com.Baidu.Android.Pushservice.CommandService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
com/baidu/android/pushservice/CustomPushNotificationBuilder = Com.Baidu.Android.Pushservice.CustomPushNotificationBuilder
  <init>(IIII)V = .ctor(int, int, int, int)
  construct(Landroid/content/Context;)Landroid/app/Notification; = Construct(Android.Content.Context)
  setLayoutDrawable(I)V = SetLayoutDrawable(int)
com/baidu/android/pushservice/hwproxy/HwNotifyActivity = Com.Baidu.Android.Pushservice.Hwproxy.HwNotifyActivity
  <init>()V = .ctor()
com/baidu/android/pushservice/jni/BaiduAppSSOJni = Com.Baidu.Android.Pushservice.Jni.BaiduAppSSOJni
  a(Landroid/content/Context;Ljava/lang/String;[B)[B = A(Android.Content.Context, string, byte[])
  decryptAES([BII)[B = DecryptAES(byte[], int, int)
  encodeBySha1([B)Ljava/lang/String; = EncodeBySha1(byte[])
  encryptAES(Ljava/lang/String;I)[B = EncryptAES(string, int)
  encryptAESwithKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[B = EncryptAESwithKey(string, string, string)
  getPublicKey(I)Ljava/lang/String; = GetPublicKey(int)
com/baidu/android/pushservice/jni/PushSocket = Com.Baidu.Android.Pushservice.Jni.PushSocket
  a = A
  isIPv4Reachable()Z = IsIPv4Reachable
  getLastSocketError()I = LastSocketError
  getLastSocketIP()Ljava/lang/String; = LastSocketIP
  a()Z = A()
  a(Landroid/content/Context;I)[B = A(Android.Content.Context, int)
  a([BI)S = A(byte[], int)
  a(I)V = A(int)
  a(I[BI)I = A(int, byte[], int)
  b([BI)I = B(byte[], int)
  closeSocket(I)I = CloseSocket(int)
  createSocket(Ljava/lang/String;ILcom/baidu/android/pushservice/jni/PushSocket$OnCreateSocketListener;)I = CreateSocket(string, int, Com.Baidu.Android.Pushservice.Jni.PushSocket.IOnCreateSocketListener)
com/baidu/android/pushservice/job/PushJobService = Com.Baidu.Android.Pushservice.Job.PushJobService
  <init>()V = .ctor()
  onStartJob(Landroid/app/job/JobParameters;)Z = OnStartJob(Android.App.Job.JobParameters)
  onStopJob(Landroid/app/job/JobParameters;)Z = OnStopJob(Android.App.Job.JobParameters)
com/baidu/android/pushservice/message/CrossPushMessage = Com.Baidu.Android.Pushservice.Message.CrossPushMessage
  <init>()V = .ctor()
  a = A
  b = B
com/baidu/android/pushservice/message/PublicMsg = Com.Baidu.Android.Pushservice.Message.PublicMsg
  <init>()V = .ctor()
  CREATOR = Creator
  FLAG_NEED_CLEAR = FlagNeedClear
  FLAG_NEED_SOUND = FlagNeedSound
  FLAG_NEED_VIBRATE = FlagNeedVibrate
  mAdvertiseBigPictureClickUrl = MAdvertiseBigPictureClickUrl
  mAdvertiseBigPictureContent = MAdvertiseBigPictureContent
  mAdvertiseBigPictureTitle = MAdvertiseBigPictureTitle
  mAdvertiseBigPictureUrl = MAdvertiseBigPictureUrl
  mAdvertiseClickUrl = MAdvertiseClickUrl
  mAdvertiseDetailClickUrl = MAdvertiseDetailClickUrl
  mAdvertiseDownloadClickUrl = MAdvertiseDownloadClickUrl
  mAdvertiseLargeIconUrl = MAdvertiseLargeIconUrl
  mAdvertiseSmallIconUrl = MAdvertiseSmallIconUrl
  mAdvertiseStyle = MAdvertiseStyle
  mAppId = MAppId
  mCustomContent = MCustomContent
  mDescription = MDescription
  mIsSupportApp = MIsSupportApp
  mMsgId = MMsgId
  mNetType = MNetType
  mNotificationBasicStyle = MNotificationBasicStyle
  mNotificationBuilder = MNotificationBuilder
  mOpenType = MOpenType
  mPkgContent = MPkgContent
  mPkgName = MPkgName
  mPkgVercode = MPkgVercode
  mSupportAppname = MSupportAppname
  mTitle = MTitle
  mUrl = MUrl
  mUserConfirm = MUserConfirm
  describeContents()I = DescribeContents()
  getLauncherActivityName(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String; = GetLauncherActivityName(Android.Content.Context, string)
  handle(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = Handle(Android.Content.Context, string, string)
  handlePrivateNotification(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B[B)V = HandlePrivateNotification(Android.Content.Context, string, string, string, byte[], byte[])
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/android/pushservice/mzproxy/MzNotifyActivity = Com.Baidu.Android.Pushservice.Mzproxy.MzNotifyActivity
  <init>()V = .ctor()
com/baidu/android/pushservice/opproxy/OpNotifyActivity = Com.Baidu.Android.Pushservice.Opproxy.OpNotifyActivity
  <init>()V = .ctor()
com/baidu/android/pushservice/PushConstants = Com.Baidu.Android.Pushservice.PushConstants
  <init>()V = .ctor()
  LOGIN_TYPE_API_KEY = LoginTypeApiKey
  a(I)Ljava/lang/String; = A(int)
com/baidu/android/pushservice/PushInfoProvider = Com.Baidu.Android.Pushservice.PushInfoProvider
  <init>()V = .ctor()
  delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I = Delete(Android.Net.Uri, string, string[])
  getType(Landroid/net/Uri;)Ljava/lang/String; = GetType(Android.Net.Uri)
  insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri; = Insert(Android.Net.Uri, Android.Content.ContentValues)
  onCreate()Z = OnCreate()
  query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(Android.Net.Uri, string[], string, string[], string)
  update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I = Update(Android.Net.Uri, Android.Content.ContentValues, string, string[])
com/baidu/android/pushservice/PushManager = Com.Baidu.Android.Pushservice.PushManager
  <init>()V = .ctor()
  bindPush(Landroid/content/Context;Ljava/lang/String;)V = BindPush(Android.Content.Context, string)
  createNotificationChannel(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = CreateNotificationChannel(Android.Content.Context, string, string)
  deleteNotificationChannel(Landroid/content/Context;Ljava/lang/String;)V = DeleteNotificationChannel(Android.Content.Context, string)
  delTags(Landroid/content/Context;Ljava/util/List;)V = DelTags(Android.Content.Context, System.Collections.Generic.IList<string>)
  disableAlarm(Landroid/content/Context;)V = DisableAlarm(Android.Content.Context)
  enableHuaweiProxy(Landroid/content/Context;Z)V = EnableHuaweiProxy(Android.Content.Context, bool)
  enableMeizuProxy(Landroid/content/Context;ZLjava/lang/String;Ljava/lang/String;)V = EnableMeizuProxy(Android.Content.Context, bool, string, string)
  enableOppoProxy(Landroid/content/Context;ZLjava/lang/String;Ljava/lang/String;)V = EnableOppoProxy(Android.Content.Context, bool, string, string)
  enableVivoProxy(Landroid/content/Context;Z)V = EnableVivoProxy(Android.Content.Context, bool)
  enableXiaomiProxy(Landroid/content/Context;ZLjava/lang/String;Ljava/lang/String;)V = EnableXiaomiProxy(Android.Content.Context, bool, string, string)
  getBindType(Landroid/content/Context;)I = GetBindType(Android.Content.Context)
  insertPassThroughMessageClick(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = InsertPassThroughMessageClick(Android.Content.Context, string, string)
  isPushEnabled(Landroid/content/Context;)Z = IsPushEnabled(Android.Content.Context)
  listTags(Landroid/content/Context;)V = ListTags(Android.Content.Context)
  requestOppoNotification(Landroid/content/Context;)V = RequestOppoNotification(Android.Content.Context)
  reStartWork(Landroid/content/Context;)V = ReStartWork(Android.Content.Context)
  resumeWork(Landroid/content/Context;)V = ResumeWork(Android.Content.Context)
  setDefaultNotificationBuilder(Landroid/content/Context;Lcom/baidu/android/pushservice/PushNotificationBuilder;)V = SetDefaultNotificationBuilder(Android.Content.Context, Com.Baidu.Android.Pushservice.PushNotificationBuilder)
  setJobSchedulerId(Landroid/content/Context;I)V = SetJobSchedulerId(Android.Content.Context, int)
  setNoDisturbMode(Landroid/content/Context;IIII)V = SetNoDisturbMode(Android.Content.Context, int, int, int, int)
  setNotificationBuilder(Landroid/content/Context;ILcom/baidu/android/pushservice/PushNotificationBuilder;)V = SetNotificationBuilder(Android.Content.Context, int, Com.Baidu.Android.Pushservice.PushNotificationBuilder)
  setTags(Landroid/content/Context;Ljava/util/List;)V = SetTags(Android.Content.Context, System.Collections.Generic.IList<string>)
  startWork(Landroid/content/Context;ILjava/lang/String;)V = StartWork(Android.Content.Context, int, string)
  stopWork(Landroid/content/Context;)V = StopWork(Android.Content.Context)
com/baidu/android/pushservice/PushMessageReceiver = Com.Baidu.Android.Pushservice.PushMessageReceiver
  <init>()V = .ctor()
  TAG = Tag
  onBind(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnBind(Android.Content.Context, int, string, string, string, string)
  onDelTags(Landroid/content/Context;ILjava/util/List;Ljava/util/List;Ljava/lang/String;)V = OnDelTags(Android.Content.Context, int, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>, string)
  onListTags(Landroid/content/Context;ILjava/util/List;Ljava/lang/String;)V = OnListTags(Android.Content.Context, int, System.Collections.Generic.IList<string>, string)
  onMessage(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = OnMessage(Android.Content.Context, string, string)
  onNotificationArrived(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnNotificationArrived(Android.Content.Context, string, string, string)
  onNotificationClicked(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnNotificationClicked(Android.Content.Context, string, string, string)
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  onSetTags(Landroid/content/Context;ILjava/util/List;Ljava/util/List;Ljava/lang/String;)V = OnSetTags(Android.Content.Context, int, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>, string)
  onUnbind(Landroid/content/Context;ILjava/lang/String;)V = OnUnbind(Android.Content.Context, int, string)
com/baidu/android/pushservice/PushNotificationBuilder = Com.Baidu.Android.Pushservice.PushNotificationBuilder
  <init>()V = .ctor()
  mChannelId = MChannelId
  mChannelName = MChannelName
  mColor = MColor
  mNotificationDefaults = MNotificationDefaults
  mNotificationFlags = MNotificationFlags
  mNotificationsound = MNotificationsound
  mNotificationText = MNotificationText
  mNotificationTitle = MNotificationTitle
  mStatusbarIcon = MStatusbarIcon
  mVibratePattern = MVibratePattern
  construct(Landroid/content/Context;)Landroid/app/Notification; = Construct(Android.Content.Context)
  setChannelId(Ljava/lang/String;)V = SetChannelId(string)
  setChannelName(Ljava/lang/String;)V = SetChannelName(string)
  setColor(I)V = SetColor(int)
  setNotificationDefaults(I)V = SetNotificationDefaults(int)
  setNotificationFlags(I)V = SetNotificationFlags(int)
  setNotificationSound(Ljava/lang/String;)V = SetNotificationSound(string)
  setNotificationText(Ljava/lang/String;)V = SetNotificationText(string)
  setNotificationTitle(Ljava/lang/String;)V = SetNotificationTitle(string)
  setStatusbarIcon(I)V = SetStatusbarIcon(int)
com/baidu/android/pushservice/PushService = Com.Baidu.Android.Pushservice.PushService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
com/baidu/android/pushservice/PushServiceReceiver = Com.Baidu.Android.Pushservice.PushServiceReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/baidu/android/pushservice/PushSettings = Com.Baidu.Android.Pushservice.PushSettings
  <init>()V = .ctor()
  a = A
  b = B
  c = C
  d = D
  e = E
  f = F
  a(Landroid/content/Context;)Ljava/lang/String; = A(Android.Content.Context)
  a(Landroid/content/Context;Ljava/lang/String;)V = A(Android.Content.Context, string)
  a(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = A(Android.Content.Context, string, string)
  b(Landroid/content/Context;)Ljava/lang/String; = B(Android.Content.Context)
  b(Landroid/content/Context;Ljava/lang/String;)V = B(Android.Content.Context, string)
  c(Landroid/content/Context;)Ljava/lang/String; = C(Android.Content.Context)
  d(Landroid/content/Context;)Ljava/lang/String; = D(Android.Content.Context)
  e(Landroid/content/Context;)Z = E(Android.Content.Context)
  enableDebugMode(Z)V = EnableDebugMode(bool)
  f(Landroid/content/Context;)Z = F(Android.Content.Context)
  g(Landroid/content/Context;)Z = G(Android.Content.Context)
  h(Landroid/content/Context;)Z = H(Android.Content.Context)
  i(Landroid/content/Context;)Z = I(Android.Content.Context)
  j(Landroid/content/Context;)Z = J(Android.Content.Context)
  k(Landroid/content/Context;)Z = K(Android.Content.Context)
com/baidu/android/pushservice/RegistrationReceiver = Com.Baidu.Android.Pushservice.RegistrationReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/baidu/pushservice/PushService = Com.Baidu.Pushservice.PushService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
